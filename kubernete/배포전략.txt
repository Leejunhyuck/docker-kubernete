어떻게 배포 작업을 자동화하고 서비스 무중단을 유지해야 할지를 고민해야한다.

롤링 업데이트
    디플로이먼트 리소스에서는 파드를 교체하는 전략을 .spec.strategy.type 속성에 정의했다.
    값은 RollingUpdate와 Recreate의 두가지 값을 지정할 수 있는데 기본값은 RollingUpdate이다.

    kubectl patch deployment echo-version `
    -p '{"spec":{"template":{"spec":"containers":{"name":"echo-version","image":"gihyodocker/echo-version:0.2.0}}}}'

    kubectl get pod -l app echo-version -w (w 파드의 상태변화를 알수 있다.)

    레플리카의 수가 하나 이상인 경우 
    strategy 설정을 조절해 롤링 업데이트 시의 동작을 제어할 수 있다.
        MaxUnavaliable은 롤링 업데이트 중 동시에 삭제 할수 있는 파드의 최대 개수이다.
        ex) replicas 4이고, MaxUnavaliable 3 이면 시작과 동시에 3개가 삭제 된다. (1이 안전하다)
        MaxSurge는 롤링 업데이트 중 동시에 생성하는 파드의 개수다.

실행 중인 컨테이너에 대한 헬스 체크 설정
    Running 상태여도 애플리케이션이 제대로 된 응답을 하는데 시간이 걸릴 수 있음
    그래서 livenessProbe와 readinessProbe라는 컨테이너 헬스 체크기능이 있다.
    timeoutSeconds 는 헬스 체크 요청의 타임아웃 시간이며, initialDelaySeconds 컨테이너 시작 후, 헬스 체크를 시작하는 시간을 의미한다.
    readinessProbe 설정하면 정상 상태가 아닌 컨테이너가 애플리케이션에 투입되는 것을 막을 수 있으므로 설정하는것이 좋다.

    위 두개를 설정한 컨테이너는 running 상태가 되도 헬스체크를 통과한 상태가 되어야 1/1 이 된다.
    kubectl get pod -l app=echo-version

    * 안전을 위해 애플리케이션을 정지한 후 파드를 삭제한다.
        파드에 종료 명령이 전달되면 파드에속하는 컨테이너 프로세스에도 SIGTERM 시그널이 전달된다. SIGTERM 시그널을 받은 컨테이너는
        terminationGracePeriodSeconds에 설정된 값(30초)안에 정상적으로 애플리케이션이 종료되지 않으면 SIGKILL 시그널을 보내어 컨테이너를 강제 종료한다.

        종료 시간이 오래걸리는 컨테이너는 terminationGracePeriodSeconds 값을 늘린다.
        spec:
            terminationGracePeriodSeconds: 60
            containers
            - name: mysql

        nginx는 또 다른 요소를 고려해야한다. SIGTERM 시그널을 받으면 즉시 종료된다. 마스터 프로세스 뿐아니라 워커 프로세스도 즉시 종료된다.
        쿠버네티스는 lifecycle.preStop 속성에서 컨테이너 종료 시작 시점의 훅을 정의 할수 있다.
        lifecycle:
            preStop:
                exec:
                    command: ["/usr/sbin/nginx","-s","quit"]

블루-그린 배포 
    롤링 업데이트 방법은 새 버전과 구버전 파드가 존재하는 시간이 불가피하게 발생한다.
    롤링 업데이트가 적합하지 않은 애플리케이션에서 사용

    2계통의 디플로이먼트를 준비한다.

    그 후 들다 aplly 한 후,

    service.yaml 의 spec.selector.color을 바꾸는 방법으로 사용할 디플로이먼트를 바꿀 수 있다.

    Linkerd와 istio로 서비스 단위의 배포가 가능
    * 카나리아 릴리스 전략을 사용할 수도 있다.(일부 사용자의 접근을 다른 버전의 애플리케이션으로 돌리거나 A/B 테스트에도 활용 가능)
                